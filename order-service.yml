spring:
  application:
    name: order-service

  datasource:
    url: jdbc:postgresql://order_DB:5432/order_DB
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # sql:
  #   init:
  #     mode: always
  #     data-locations: classpath:data.sql

server:
  servlet:
    context-path: /orders
  port: 9020

# eureka:
#   client:
#     service-url:
#       defaultZone: http://localhost:8761/eureka/ // this is define in global as application.yml

management:
  health:
    circuitbreaker:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    health:
      show-details: always

resilience4j:
  retry:
    config:
      maxRetryAttempts: 3
      waitDuration: 100ms

  rateLimiter:
    instances:
      inventoryRateLimiter:
        limitRefreshPeriod: 5s
        limitForPeriod: 100
        timeoutDuration: 10ms

  circuitbreaker:
    instances:
      inventoryCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 20s
        permittedNumberOfCallsInHalfOpenState: 3
        eventConsumerBufferSize: 10
my:
  variable: order-github-default
  
#    defer-datasource-initialization: true
#
#  sql:
#    init:
#      mode: always
#      data-locations: classpath:data.sql
